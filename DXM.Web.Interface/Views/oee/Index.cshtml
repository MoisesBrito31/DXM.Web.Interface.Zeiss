@model DXM.OEE.OEE;

@{
    ViewData["Title"] = "OEE";
}

<script src="~/js/moment.js"></script>
<script src="~/js/Chart.min.js"></script>
<script src="~/js/Chart.js"></script>
<script src="~/js/chart.util.js"></script>

<div class="card-title mt-5 mb-5">
    <div class="row">
        <div class="col text-left">
            <h2>Fábrica Visão Geral</h2>
        </div>
    </div>
</div>



<hr>
<div class="container-fluid row m-auto">
    @for (int x = 0; x < Model.Linhas.Count; x++)
    {
        <div class="col-auto">
            <div class="bg-light text-center border rounded mb-5" style="min-width:250px; max-width:300px;">
                <h3 id="l @x">@Model.Linhas[x].nome</h3>
                <!--<div id="@x"></div>-->
                <div id="canvas-holder">
                    <canvas id="@x"></canvas>
                </div>

                <div >
                    <label>Status:</label>
                    <h2 class="p-2 rounded border border-dark text-center">
                        @if (Model.Linhas[x].parado_sts == 1)
                        {
                            <span id="@x sts" style="color:gray"><strong>Parado</strong></span>
                        }
                        else if (Model.Linhas[x].rodando_sts == 1)
                        {
                            <span id="@x sts" style="color:green"><strong>Operando</strong></span>
                        }
                        else if (Model.Linhas[x].espera_sts == 1)
                        {
                            <span id="@x sts" style="color:orange"><strong>Espera</strong></span>
                        }
                        else if (Model.Linhas[x].falha_sts == 1)
                        {
                            <span id="@x sts" style="color:red"><strong>Falha</strong></span>
                        }
                        else
                        {
                            <span id="@x sts" style="color:black"><strong>Desconhecido</strong></span>
                        }
                    </h2>
                </div>
                <div>

                    <div class="form-group ">
                        <label>Tempo Operando:</label>
                        <input id="@x rodando_t" class="form-control text-center" readonly="readonly" value="@Model.Linhas[x].rodando_t" />
                    </div>
                    <div class="form-group ">
                        <label>Tempo Espera:</label>
                        <input id="@x espera_t" class="form-control text-center" readonly="readonly" value="@Model.Linhas[x].espera_t" />
                    </div>
                    <div class="form-group ">
                        <label>Tempo Parado:</label>
                        <input id="@x parado_t" class="form-control text-center" readonly="readonly" value="@Model.Linhas[x].parado_t" />
                    </div>
                    <div class="form-group ">
                        <label>Tempo Falha:</label>
                        <input id="@x falha_t" class="form-control text-center" readonly="readonly" value="@Model.Linhas[x].falha_t" />
                    </div>
                </div>

                <div class="mt-2 mb-2">
                    <button type="button" class="btn btn-block btn-primary" onclick="document.location.href='/oee/historico/@x'">Histórico</button>
                </div>

            </div>
               
               
         </div>
               
           
    }
</div>



<script>
    var data;
    var pizza = []
    var myPies = []
    
    var linhas = @Model.quantidade;


    
    for(var x = 0; x < linhas; x++) {
        var a = {
            type: 'pie',
            data: {
                datasets: [{
                    data: [
                       0, 0, 0,0,
                    ],
                    backgroundColor: [
                        window.chartColors.red,
                        window.chartColors.orange,
                        window.chartColors.green,
                        window.chartColors.grey,
                    ],
                    label: 'Grafico'
                }],
                labels: [
                    'Falha',
                    'Espera',
                    'Operando',
                    'Parado'
                ]
            },
            options: {
                responsive: true
            }
        };
        pizza.push(a)
    }
    var randomScalingFactor = function () {
        return Math.round(Math.random() * 100);
    };

    window.onload = function () {
        for (x = 0; x < linhas; x++) {
            var ctx = document.getElementById(x).getContext('2d');
            myPies[x] = new Chart(ctx, pizza[x]);
        }
    };

    var colorNames = Object.keys(window.chartColors);
 
    setInterval(function () {
        getlinhas();
    }, 2000)

    function getlinhas() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                if (re == "falha") {
                    document.location.href = "/oee/offline";
                }
                data = JSON.parse(re);                
                if (data[0].estado =="DXM OffLine") {
                    document.location.href = "/oee/offline";
                }
                else {
                    for (x = 0; x < data.length; x++) {
                       
                        document.getElementById(`${x} parado_t`).value = `${parseInt(data[x].parado_t / 60)} : ${data[x].parado_t % 60}`
                            
                        document.getElementById(`${x} rodando_t`).value = `${parseInt(data[x].rodando_t / 60)} : ${data[x].rodando_t % 60}`
                            
                        document.getElementById(`${x} falha_t`).value = `${parseInt(data[x].falha_t / 60)} : ${data[x].falha_t % 60}`
                           
                        document.getElementById(`${x} espera_t`).value = `${parseInt(data[x].espera_t / 60)} : ${data[x].espera_t % 60}`
                        if (data[x].parado_sts == 1) {
                            document.getElementById(`${x} sts`).innerHTML = "Parado"
                            document.getElementById(`${x} sts`).setAttribute("style","color:gray")
                        }
                        else if (data[x].rodando_sts == 1) {
                            document.getElementById(`${x} sts`).innerHTML = "Operando"
                            document.getElementById(`${x} sts`).setAttribute("style", "color:green")
                        }
                        else if (data[x].falha_sts == 1) {
                            document.getElementById(`${x} sts`).innerHTML = "Falha"
                            document.getElementById(`${x} sts`).setAttribute("style", "color:red")
                        }
                        else if (data[x].espera_sts == 1) {
                            document.getElementById(`${x} sts`).innerHTML = "Espera"
                            document.getElementById(`${x} sts`).setAttribute("style", "color:orange")
                        }
                        else {
                            document.getElementById(`${x} sts`).innerHTML = "Desconhecido"
                            document.getElementById(`${x} sts`).setAttribute("style", "color:black")
                        }
                        myPies[x].data.datasets[0].data = [data[x].falha_per,data[x].espera_per,data[x].rodando_per,data[x].parado_per]
                        myPies[x].update()
                    }
                }

            }
        }
        xhp.open("Get", "/oee/conjunto_linhas_zeiss");
        xhp.send();
    }

</script>


